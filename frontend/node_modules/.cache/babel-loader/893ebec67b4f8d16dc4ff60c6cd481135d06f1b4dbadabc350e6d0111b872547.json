{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\bootcamp\\\\Collaborative-Project-Management-Tool\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport Column from './Column';\nimport { DndContext } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { useDroppable } from '@dnd-kit/core';\nimport './styles/board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = {\n  todos: {\n    id: 'todos',\n    title: 'To Do',\n    items: []\n  },\n  inProgress: {\n    id: 'inProgress',\n    title: 'In Progress',\n    items: []\n  },\n  completed: {\n    id: 'completed',\n    title: 'Completed',\n    items: []\n  }\n};\nconst Board = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const addCard = (columnId, card) => {\n    setColumns(prevColumns => ({\n      ...prevColumns,\n      [columnId]: {\n        ...prevColumns[columnId],\n        items: [...prevColumns[columnId].items, card]\n      }\n    }));\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    const activeColumn = findColumn(active.id);\n    const overColumn = findColumn(over.id);\n    if (activeColumn === overColumn) {\n      const newItems = arrayMove(columns[activeColumn].items, findIndex(activeColumn, active.id), findIndex(overColumn, over.id));\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [activeColumn]: {\n          ...prevColumns[activeColumn],\n          items: newItems\n        }\n      }));\n    } else {\n      const newActiveItems = [...columns[activeColumn].items];\n      const newOverItems = [...columns[overColumn].items];\n      newActiveItems.splice(findIndex(activeColumn, active.id), 1);\n      newOverItems.splice(findIndex(overColumn, over.id), 0, findCard(activeColumn, active.id));\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [activeColumn]: {\n          ...prevColumns[activeColumn],\n          items: newActiveItems\n        },\n        [overColumn]: {\n          ...prevColumns[overColumn],\n          items: newOverItems\n        }\n      }));\n    }\n  };\n  const findColumn = id => {\n    return Object.keys(columns).find(key => columns[key].items.some(item => item.id === id));\n  };\n  const findIndex = (column, id) => {\n    return columns[column].items.findIndex(item => item.id === id);\n  };\n  const findCard = (column, id) => {\n    return columns[column].items.find(item => item.id === id);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Object.keys(columns).map(columnId => /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: columns[columnId].items,\n        strategy: verticalListSortingStrategy,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          column: columns[columnId],\n          addCard: addCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, columnId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"NRsKYLNQK79YL22+zswPtdaKbBo=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Column","DndContext","arrayMove","SortableContext","verticalListSortingStrategy","useDroppable","jsxDEV","_jsxDEV","initialColumns","todos","id","title","items","inProgress","completed","Board","_s","columns","setColumns","addCard","columnId","card","prevColumns","handleDragEnd","event","active","over","activeColumn","findColumn","overColumn","newItems","findIndex","newActiveItems","newOverItems","splice","findCard","Object","keys","find","key","some","item","column","onDragEnd","children","className","map","strategy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andre/bootcamp/Collaborative-Project-Management-Tool/frontend/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\r\nimport React, { useState } from 'react';\r\nimport Column from './Column';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport { useDroppable } from '@dnd-kit/core';\r\nimport './styles/board.css';\r\n\r\nconst initialColumns = {\r\n  todos: { id: 'todos', title: 'To Do', items: [] },\r\n  inProgress: { id: 'inProgress', title: 'In Progress', items: [] },\r\n  completed: { id: 'completed', title: 'Completed', items: [] },\r\n};\r\n\r\nconst Board = () => {\r\n  const [columns, setColumns] = useState(initialColumns);\r\n\r\n  const addCard = (columnId, card) => {\r\n    setColumns((prevColumns) => ({\r\n      ...prevColumns,\r\n      [columnId]: {\r\n        ...prevColumns[columnId],\r\n        items: [...prevColumns[columnId].items, card],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n\r\n    const activeColumn = findColumn(active.id);\r\n    const overColumn = findColumn(over.id);\r\n\r\n    if (activeColumn === overColumn) {\r\n      const newItems = arrayMove(\r\n        columns[activeColumn].items,\r\n        findIndex(activeColumn, active.id),\r\n        findIndex(overColumn, over.id)\r\n      );\r\n      setColumns((prevColumns) => ({\r\n        ...prevColumns,\r\n        [activeColumn]: { ...prevColumns[activeColumn], items: newItems },\r\n      }));\r\n    } else {\r\n      const newActiveItems = [...columns[activeColumn].items];\r\n      const newOverItems = [...columns[overColumn].items];\r\n      newActiveItems.splice(findIndex(activeColumn, active.id), 1);\r\n      newOverItems.splice(findIndex(overColumn, over.id), 0, findCard(activeColumn, active.id));\r\n\r\n      setColumns((prevColumns) => ({\r\n        ...prevColumns,\r\n        [activeColumn]: { ...prevColumns[activeColumn], items: newActiveItems },\r\n        [overColumn]: { ...prevColumns[overColumn], items: newOverItems },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const findColumn = (id) => {\r\n    return Object.keys(columns).find((key) => columns[key].items.some((item) => item.id === id));\r\n  };\r\n\r\n  const findIndex = (column, id) => {\r\n    return columns[column].items.findIndex((item) => item.id === id);\r\n  };\r\n\r\n  const findCard = (column, id) => {\r\n    return columns[column].items.find((item) => item.id === id);\r\n  };\r\n\r\n  return (\r\n    <DndContext onDragEnd={handleDragEnd}>\r\n      <div className=\"board\">\r\n        {Object.keys(columns).map((columnId) => (\r\n          <SortableContext key={columnId} items={columns[columnId].items} strategy={verticalListSortingStrategy}>\r\n            <Column column={columns[columnId]} addCard={addCard} />\r\n          </SortableContext>\r\n        ))}\r\n      </div>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,SAAS,EAAEC,eAAe,EAAEC,2BAA2B,QAAQ,mBAAmB;AAC3F,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE;IAAEC,EAAE,EAAE,OAAO;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC;EACjDC,UAAU,EAAE;IAAEH,EAAE,EAAE,YAAY;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAG,CAAC;EACjEE,SAAS,EAAE;IAAEJ,EAAE,EAAE,WAAW;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAG;AAC9D,CAAC;AAED,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAACS,cAAc,CAAC;EAEtD,MAAMW,OAAO,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;IAClCH,UAAU,CAAEI,WAAW,KAAM;MAC3B,GAAGA,WAAW;MACd,CAACF,QAAQ,GAAG;QACV,GAAGE,WAAW,CAACF,QAAQ,CAAC;QACxBR,KAAK,EAAE,CAAC,GAAGU,WAAW,CAACF,QAAQ,CAAC,CAACR,KAAK,EAAES,IAAI;MAC9C;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGF,KAAK;IAC9B,IAAI,CAACE,IAAI,EAAE;IAEX,MAAMC,YAAY,GAAGC,UAAU,CAACH,MAAM,CAACf,EAAE,CAAC;IAC1C,MAAMmB,UAAU,GAAGD,UAAU,CAACF,IAAI,CAAChB,EAAE,CAAC;IAEtC,IAAIiB,YAAY,KAAKE,UAAU,EAAE;MAC/B,MAAMC,QAAQ,GAAG5B,SAAS,CACxBe,OAAO,CAACU,YAAY,CAAC,CAACf,KAAK,EAC3BmB,SAAS,CAACJ,YAAY,EAAEF,MAAM,CAACf,EAAE,CAAC,EAClCqB,SAAS,CAACF,UAAU,EAAEH,IAAI,CAAChB,EAAE,CAC/B,CAAC;MACDQ,UAAU,CAAEI,WAAW,KAAM;QAC3B,GAAGA,WAAW;QACd,CAACK,YAAY,GAAG;UAAE,GAAGL,WAAW,CAACK,YAAY,CAAC;UAAEf,KAAK,EAAEkB;QAAS;MAClE,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL,MAAME,cAAc,GAAG,CAAC,GAAGf,OAAO,CAACU,YAAY,CAAC,CAACf,KAAK,CAAC;MACvD,MAAMqB,YAAY,GAAG,CAAC,GAAGhB,OAAO,CAACY,UAAU,CAAC,CAACjB,KAAK,CAAC;MACnDoB,cAAc,CAACE,MAAM,CAACH,SAAS,CAACJ,YAAY,EAAEF,MAAM,CAACf,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5DuB,YAAY,CAACC,MAAM,CAACH,SAAS,CAACF,UAAU,EAAEH,IAAI,CAAChB,EAAE,CAAC,EAAE,CAAC,EAAEyB,QAAQ,CAACR,YAAY,EAAEF,MAAM,CAACf,EAAE,CAAC,CAAC;MAEzFQ,UAAU,CAAEI,WAAW,KAAM;QAC3B,GAAGA,WAAW;QACd,CAACK,YAAY,GAAG;UAAE,GAAGL,WAAW,CAACK,YAAY,CAAC;UAAEf,KAAK,EAAEoB;QAAe,CAAC;QACvE,CAACH,UAAU,GAAG;UAAE,GAAGP,WAAW,CAACO,UAAU,CAAC;UAAEjB,KAAK,EAAEqB;QAAa;MAClE,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAML,UAAU,GAAIlB,EAAE,IAAK;IACzB,OAAO0B,MAAM,CAACC,IAAI,CAACpB,OAAO,CAAC,CAACqB,IAAI,CAAEC,GAAG,IAAKtB,OAAO,CAACsB,GAAG,CAAC,CAAC3B,KAAK,CAAC4B,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAC/B,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC9F,CAAC;EAED,MAAMqB,SAAS,GAAGA,CAACW,MAAM,EAAEhC,EAAE,KAAK;IAChC,OAAOO,OAAO,CAACyB,MAAM,CAAC,CAAC9B,KAAK,CAACmB,SAAS,CAAEU,IAAI,IAAKA,IAAI,CAAC/B,EAAE,KAAKA,EAAE,CAAC;EAClE,CAAC;EAED,MAAMyB,QAAQ,GAAGA,CAACO,MAAM,EAAEhC,EAAE,KAAK;IAC/B,OAAOO,OAAO,CAACyB,MAAM,CAAC,CAAC9B,KAAK,CAAC0B,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAAC/B,EAAE,KAAKA,EAAE,CAAC;EAC7D,CAAC;EAED,oBACEH,OAAA,CAACN,UAAU;IAAC0C,SAAS,EAAEpB,aAAc;IAAAqB,QAAA,eACnCrC,OAAA;MAAKsC,SAAS,EAAC,OAAO;MAAAD,QAAA,EACnBR,MAAM,CAACC,IAAI,CAACpB,OAAO,CAAC,CAAC6B,GAAG,CAAE1B,QAAQ,iBACjCb,OAAA,CAACJ,eAAe;QAAgBS,KAAK,EAAEK,OAAO,CAACG,QAAQ,CAAC,CAACR,KAAM;QAACmC,QAAQ,EAAE3C,2BAA4B;QAAAwC,QAAA,eACpGrC,OAAA,CAACP,MAAM;UAAC0C,MAAM,EAAEzB,OAAO,CAACG,QAAQ,CAAE;UAACD,OAAO,EAAEA;QAAQ;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADnC/B,QAAQ;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAACnC,EAAA,CAnEID,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAqEX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}