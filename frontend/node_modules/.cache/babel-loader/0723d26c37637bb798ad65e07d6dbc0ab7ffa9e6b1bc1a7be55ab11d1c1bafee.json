{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\bootcamp\\\\Collaborative-Project-Management-Tool\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport Column from './Column';\nimport EventForm from './EventForm';\nimport { DndContext } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport '../styles/board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = {\n  todos: {\n    id: 'todos',\n    title: 'To Do',\n    items: []\n  },\n  inProgress: {\n    id: 'inProgress',\n    title: 'In Progress',\n    items: []\n  },\n  completed: {\n    id: 'completed',\n    title: 'Completed',\n    items: []\n  }\n};\nconst Board = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const addCard = card => {\n    setColumns(prevColumns => ({\n      ...prevColumns,\n      todos: {\n        ...prevColumns.todos,\n        items: [...prevColumns.todos.items, card]\n      }\n    }));\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    const activeColumn = findColumn(active.id);\n    const overColumn = findColumn(over.id);\n    if (!activeColumn || !overColumn) {\n      console.error('Active or over column not found', {\n        activeColumn,\n        overColumn\n      });\n      return;\n    }\n    if (activeColumn === overColumn) {\n      const newItems = arrayMove(columns[activeColumn].items, findIndex(activeColumn, active.id), findIndex(overColumn, over.id));\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [activeColumn]: {\n          ...prevColumns[activeColumn],\n          items: newItems\n        }\n      }));\n    } else {\n      const newActiveItems = [...columns[activeColumn].items];\n      const newOverItems = [...columns[overColumn].items];\n      const [movedItem] = newActiveItems.splice(findIndex(activeColumn, active.id), 1);\n      if (movedItem) {\n        newOverItems.splice(findIndex(overColumn, over.id), 0, movedItem);\n        setColumns(prevColumns => ({\n          ...prevColumns,\n          [activeColumn]: {\n            ...prevColumns[activeColumn],\n            items: newActiveItems\n          },\n          [overColumn]: {\n            ...prevColumns[overColumn],\n            items: newOverItems\n          }\n        }));\n      } else {\n        console.error('Moved item not found in active column', {\n          activeColumn,\n          activeId: active.id\n        });\n      }\n    }\n  };\n  const findColumn = id => {\n    return Object.keys(columns).find(key => columns[key].items.some(item => item.id === id));\n  };\n  const findIndex = (columnId, cardId) => {\n    var _columns$columnId;\n    return (_columns$columnId = columns[columnId]) === null || _columns$columnId === void 0 ? void 0 : _columns$columnId.items.findIndex(item => item.id === cardId);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-form-section\",\n        children: /*#__PURE__*/_jsxDEV(EventForm, {\n          onAddCard: addCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: columns.todos.items,\n          strategy: verticalListSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            column: columns.todos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: columns.inProgress.items,\n          strategy: verticalListSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            column: columns.inProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: columns.completed.items,\n          strategy: verticalListSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            column: columns.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"NRsKYLNQK79YL22+zswPtdaKbBo=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Column","EventForm","DndContext","arrayMove","SortableContext","verticalListSortingStrategy","jsxDEV","_jsxDEV","initialColumns","todos","id","title","items","inProgress","completed","Board","_s","columns","setColumns","addCard","card","prevColumns","handleDragEnd","event","active","over","activeColumn","findColumn","overColumn","console","error","newItems","findIndex","newActiveItems","newOverItems","movedItem","splice","activeId","Object","keys","find","key","some","item","columnId","cardId","_columns$columnId","onDragEnd","children","className","onAddCard","fileName","_jsxFileName","lineNumber","columnNumber","strategy","column","_c","$RefreshReg$"],"sources":["C:/Users/andre/bootcamp/Collaborative-Project-Management-Tool/frontend/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\r\nimport React, { useState } from 'react';\r\nimport Column from './Column';\r\nimport EventForm from './EventForm';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport '../styles/board.css';\r\n\r\nconst initialColumns = {\r\n  todos: { id: 'todos', title: 'To Do', items: [] },\r\n  inProgress: { id: 'inProgress', title: 'In Progress', items: [] },\r\n  completed: { id: 'completed', title: 'Completed', items: [] },\r\n};\r\n\r\nconst Board = () => {\r\n  const [columns, setColumns] = useState(initialColumns);\r\n\r\n  const addCard = (card) => {\r\n    setColumns((prevColumns) => ({\r\n      ...prevColumns,\r\n      todos: {\r\n        ...prevColumns.todos,\r\n        items: [...prevColumns.todos.items, card],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n\r\n    if (!over) return;\r\n\r\n    const activeColumn = findColumn(active.id);\r\n    const overColumn = findColumn(over.id);\r\n\r\n    if (!activeColumn || !overColumn) {\r\n      console.error('Active or over column not found', { activeColumn, overColumn });\r\n      return;\r\n    }\r\n\r\n    if (activeColumn === overColumn) {\r\n      const newItems = arrayMove(\r\n        columns[activeColumn].items,\r\n        findIndex(activeColumn, active.id),\r\n        findIndex(overColumn, over.id)\r\n      );\r\n      setColumns((prevColumns) => ({\r\n        ...prevColumns,\r\n        [activeColumn]: { ...prevColumns[activeColumn], items: newItems },\r\n      }));\r\n    } else {\r\n      const newActiveItems = [...columns[activeColumn].items];\r\n      const newOverItems = [...columns[overColumn].items];\r\n      const [movedItem] = newActiveItems.splice(findIndex(activeColumn, active.id), 1);\r\n\r\n      if (movedItem) {\r\n        newOverItems.splice(findIndex(overColumn, over.id), 0, movedItem);\r\n\r\n        setColumns((prevColumns) => ({\r\n          ...prevColumns,\r\n          [activeColumn]: { ...prevColumns[activeColumn], items: newActiveItems },\r\n          [overColumn]: { ...prevColumns[overColumn], items: newOverItems },\r\n        }));\r\n      } else {\r\n        console.error('Moved item not found in active column', { activeColumn, activeId: active.id });\r\n      }\r\n    }\r\n  };\r\n\r\n  const findColumn = (id) => {\r\n    return Object.keys(columns).find((key) =>\r\n      columns[key].items.some((item) => item.id === id)\r\n    );\r\n  };\r\n\r\n  const findIndex = (columnId, cardId) => columns[columnId]?.items.findIndex((item) => item.id === cardId);\r\n\r\n  return (\r\n    <DndContext onDragEnd={handleDragEnd}>\r\n      <div className=\"board\">\r\n        <div className=\"event-form-section\">\r\n          <EventForm onAddCard={addCard} />\r\n        </div>\r\n        <div className=\"columns\">\r\n          <SortableContext items={columns.todos.items} strategy={verticalListSortingStrategy}>\r\n            <Column column={columns.todos} />\r\n          </SortableContext>\r\n          <SortableContext items={columns.inProgress.items} strategy={verticalListSortingStrategy}>\r\n            <Column column={columns.inProgress} />\r\n          </SortableContext>\r\n          <SortableContext items={columns.completed.items} strategy={verticalListSortingStrategy}>\r\n            <Column column={columns.completed} />\r\n          </SortableContext>\r\n        </div>\r\n      </div>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}