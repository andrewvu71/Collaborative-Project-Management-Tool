{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\bootcamp\\\\Collaborative-Project-Management-Tool\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport Column from './Column';\nimport EventForm from './EventForm';\nimport { DndContext } from '@dnd-kit/core';\nimport { arrayMove, rectSortingStrategy } from '@dnd-kit/sortable';\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\nimport '../styles/board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = {\n  todos: {\n    id: 'todos',\n    title: 'To Do',\n    items: []\n  },\n  inProgress: {\n    id: 'inProgress',\n    title: 'In Progress',\n    items: []\n  },\n  completed: {\n    id: 'completed',\n    title: 'Completed',\n    items: []\n  }\n};\nconst Board = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const addCard = card => {\n    setColumns(prevColumns => ({\n      ...prevColumns,\n      todos: {\n        ...prevColumns.todos,\n        items: [...prevColumns.todos.items, card]\n      }\n    }));\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) return;\n    const activeColumnId = findColumnId(active.id);\n    const overColumnId = findColumnId(over.id);\n    if (activeColumnId === overColumnId) {\n      // Reorder items within the same column\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [activeColumnId]: {\n          ...prevColumns[activeColumnId],\n          items: arrayMove(prevColumns[activeColumnId].items, findIndex(activeColumnId, active.id), findIndex(activeColumnId, over.id))\n        }\n      }));\n    } else {\n      // Move item to another column\n      const activeIndex = findIndex(activeColumnId, active.id);\n      const overIndex = findIndex(overColumnId, over.id);\n      if (activeIndex !== -1 && overIndex !== -1) {\n        setColumns(prevColumns => {\n          const activeItems = [...prevColumns[activeColumnId].items];\n          const overItems = [...prevColumns[overColumnId].items];\n          const [movedItem] = activeItems.splice(activeIndex, 1);\n          overItems.splice(overIndex, 0, movedItem);\n          return {\n            ...prevColumns,\n            [activeColumnId]: {\n              ...prevColumns[activeColumnId],\n              items: activeItems\n            },\n            [overColumnId]: {\n              ...prevColumns[overColumnId],\n              items: overItems\n            }\n          };\n        });\n      }\n    }\n  };\n  const findColumnId = itemId => {\n    return Object.keys(columns).find(key => columns[key].items.some(item => item.id === itemId));\n  };\n  const findIndex = (columnId, itemId) => {\n    var _columns$columnId;\n    return (_columns$columnId = columns[columnId]) === null || _columns$columnId === void 0 ? void 0 : _columns$columnId.items.findIndex(item => item.id === itemId);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: handleDragEnd,\n    modifiers: [restrictToVerticalAxis],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-form-section\",\n        children: /*#__PURE__*/_jsxDEV(EventForm, {\n          onAddCard: addCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: Object.keys(columns).map(key => /*#__PURE__*/_jsxDEV(Column, {\n          column: columns[key],\n          columnId: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"NRsKYLNQK79YL22+zswPtdaKbBo=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Column","EventForm","DndContext","arrayMove","rectSortingStrategy","restrictToVerticalAxis","jsxDEV","_jsxDEV","initialColumns","todos","id","title","items","inProgress","completed","Board","_s","columns","setColumns","addCard","card","prevColumns","handleDragEnd","active","over","activeColumnId","findColumnId","overColumnId","findIndex","activeIndex","overIndex","activeItems","overItems","movedItem","splice","itemId","Object","keys","find","key","some","item","columnId","_columns$columnId","onDragEnd","modifiers","children","className","onAddCard","fileName","_jsxFileName","lineNumber","columnNumber","map","column","_c","$RefreshReg$"],"sources":["C:/Users/andre/bootcamp/Collaborative-Project-Management-Tool/frontend/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\r\nimport React, { useState } from 'react';\r\nimport Column from './Column';\r\nimport EventForm from './EventForm';\r\nimport { DndContext } from '@dnd-kit/core';\r\nimport { arrayMove, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport { restrictToVerticalAxis } from '@dnd-kit/modifiers';\r\nimport '../styles/board.css';\r\n\r\nconst initialColumns = {\r\n  todos: { id: 'todos', title: 'To Do', items: [] },\r\n  inProgress: { id: 'inProgress', title: 'In Progress', items: [] },\r\n  completed: { id: 'completed', title: 'Completed', items: [] },\r\n};\r\n\r\nconst Board = () => {\r\n  const [columns, setColumns] = useState(initialColumns);\r\n\r\n  const addCard = (card) => {\r\n    setColumns((prevColumns) => ({\r\n      ...prevColumns,\r\n      todos: {\r\n        ...prevColumns.todos,\r\n        items: [...prevColumns.todos.items, card],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = ({ active, over }) => {\r\n    if (!over) return;\r\n\r\n    const activeColumnId = findColumnId(active.id);\r\n    const overColumnId = findColumnId(over.id);\r\n\r\n    if (activeColumnId === overColumnId) {\r\n      // Reorder items within the same column\r\n      setColumns((prevColumns) => ({\r\n        ...prevColumns,\r\n        [activeColumnId]: {\r\n          ...prevColumns[activeColumnId],\r\n          items: arrayMove(\r\n            prevColumns[activeColumnId].items,\r\n            findIndex(activeColumnId, active.id),\r\n            findIndex(activeColumnId, over.id)\r\n          ),\r\n        },\r\n      }));\r\n    } else {\r\n      // Move item to another column\r\n      const activeIndex = findIndex(activeColumnId, active.id);\r\n      const overIndex = findIndex(overColumnId, over.id);\r\n\r\n      if (activeIndex !== -1 && overIndex !== -1) {\r\n        setColumns((prevColumns) => {\r\n          const activeItems = [...prevColumns[activeColumnId].items];\r\n          const overItems = [...prevColumns[overColumnId].items];\r\n          const [movedItem] = activeItems.splice(activeIndex, 1);\r\n\r\n          overItems.splice(overIndex, 0, movedItem);\r\n\r\n          return {\r\n            ...prevColumns,\r\n            [activeColumnId]: { ...prevColumns[activeColumnId], items: activeItems },\r\n            [overColumnId]: { ...prevColumns[overColumnId], items: overItems },\r\n          };\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const findColumnId = (itemId) => {\r\n    return Object.keys(columns).find((key) =>\r\n      columns[key].items.some((item) => item.id === itemId)\r\n    );\r\n  };\r\n\r\n  const findIndex = (columnId, itemId) =>\r\n    columns[columnId]?.items.findIndex((item) => item.id === itemId);\r\n\r\n  return (\r\n    <DndContext onDragEnd={handleDragEnd} modifiers={[restrictToVerticalAxis]}>\r\n      <div className=\"board\">\r\n        <div className=\"event-form-section\">\r\n          <EventForm onAddCard={addCard} />\r\n        </div>\r\n        <div className=\"columns\">\r\n          {Object.keys(columns).map((key) => (\r\n            <Column key={key} column={columns[key]} columnId={key} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}