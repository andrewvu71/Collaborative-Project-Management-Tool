{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\bootcamp\\\\Collaborative-Project-Management-Tool\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useState } from 'react';\nimport Column from './Column';\nimport EventForm from './EventForm';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport '../styles/board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = {\n  todos: {\n    id: 'todos',\n    title: 'To Do',\n    items: []\n  },\n  inProgress: {\n    id: 'inProgress',\n    title: 'In Progress',\n    items: []\n  },\n  completed: {\n    id: 'completed',\n    title: 'Completed',\n    items: []\n  }\n};\nconst Board = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const addCard = card => {\n    setColumns(prevColumns => ({\n      ...prevColumns,\n      todos: {\n        ...prevColumns.todos,\n        items: [...prevColumns.todos.items, card]\n      }\n    }));\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) return;\n    const activeColumn = findColumn(active.id);\n    const overColumn = findColumn(over.id);\n    if (!activeColumn || !overColumn) return;\n    if (activeColumn === overColumn) {\n      const items = arrayMove(columns[activeColumn].items, findIndex(activeColumn, active.id), findIndex(overColumn, over.id));\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [activeColumn]: {\n          ...prevColumns[activeColumn],\n          items\n        }\n      }));\n    } else {\n      const activeItems = [...columns[activeColumn].items];\n      const overItems = [...columns[overColumn].items];\n      const [movedItem] = activeItems.splice(findIndex(activeColumn, active.id), 1);\n      overItems.splice(findIndex(overColumn, over.id), 0, movedItem);\n      setColumns(prevColumns => ({\n        ...prevColumns,\n        [activeColumn]: {\n          ...prevColumns[activeColumn],\n          items: activeItems\n        },\n        [overColumn]: {\n          ...prevColumns[overColumn],\n          items: overItems\n        }\n      }));\n    }\n  };\n  const findColumn = id => {\n    return Object.keys(columns).find(key => columns[key].items.some(item => item.id === id));\n  };\n  const findIndex = (columnId, cardId) => {\n    var _columns$columnId;\n    return (_columns$columnId = columns[columnId]) === null || _columns$columnId === void 0 ? void 0 : _columns$columnId.items.findIndex(item => item.id === cardId);\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    collisionDetection: closestCenter,\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-form-section\",\n        children: /*#__PURE__*/_jsxDEV(EventForm, {\n          onAddCard: addCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: Object.keys(columns).map(key => /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: columns[key].items.map(item => item.id),\n          strategy: verticalListSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            column: columns[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"NRsKYLNQK79YL22+zswPtdaKbBo=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Column","EventForm","DndContext","closestCenter","arrayMove","SortableContext","verticalListSortingStrategy","jsxDEV","_jsxDEV","initialColumns","todos","id","title","items","inProgress","completed","Board","_s","columns","setColumns","addCard","card","prevColumns","handleDragEnd","active","over","activeColumn","findColumn","overColumn","findIndex","activeItems","overItems","movedItem","splice","Object","keys","find","key","some","item","columnId","cardId","_columns$columnId","collisionDetection","onDragEnd","children","className","onAddCard","fileName","_jsxFileName","lineNumber","columnNumber","map","strategy","column","_c","$RefreshReg$"],"sources":["C:/Users/andre/bootcamp/Collaborative-Project-Management-Tool/frontend/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\r\nimport React, { useState } from 'react';\r\nimport Column from './Column';\r\nimport EventForm from './EventForm';\r\nimport { DndContext, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport '../styles/board.css';\r\n\r\nconst initialColumns = {\r\n  todos: { id: 'todos', title: 'To Do', items: [] },\r\n  inProgress: { id: 'inProgress', title: 'In Progress', items: [] },\r\n  completed: { id: 'completed', title: 'Completed', items: [] },\r\n};\r\n\r\nconst Board = () => {\r\n  const [columns, setColumns] = useState(initialColumns);\r\n\r\n  const addCard = (card) => {\r\n    setColumns((prevColumns) => ({\r\n      ...prevColumns,\r\n      todos: {\r\n        ...prevColumns.todos,\r\n        items: [...prevColumns.todos.items, card],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDragEnd = ({ active, over }) => {\r\n    if (!over) return;\r\n\r\n    const activeColumn = findColumn(active.id);\r\n    const overColumn = findColumn(over.id);\r\n\r\n    if (!activeColumn || !overColumn) return;\r\n\r\n    if (activeColumn === overColumn) {\r\n      const items = arrayMove(\r\n        columns[activeColumn].items,\r\n        findIndex(activeColumn, active.id),\r\n        findIndex(overColumn, over.id)\r\n      );\r\n\r\n      setColumns((prevColumns) => ({\r\n        ...prevColumns,\r\n        [activeColumn]: {\r\n          ...prevColumns[activeColumn],\r\n          items,\r\n        },\r\n      }));\r\n    } else {\r\n      const activeItems = [...columns[activeColumn].items];\r\n      const overItems = [...columns[overColumn].items];\r\n      const [movedItem] = activeItems.splice(findIndex(activeColumn, active.id), 1);\r\n      overItems.splice(findIndex(overColumn, over.id), 0, movedItem);\r\n\r\n      setColumns((prevColumns) => ({\r\n        ...prevColumns,\r\n        [activeColumn]: { ...prevColumns[activeColumn], items: activeItems },\r\n        [overColumn]: { ...prevColumns[overColumn], items: overItems },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const findColumn = (id) => {\r\n    return Object.keys(columns).find((key) =>\r\n      columns[key].items.some((item) => item.id === id)\r\n    );\r\n  };\r\n\r\n  const findIndex = (columnId, cardId) => {\r\n    return columns[columnId]?.items.findIndex((item) => item.id === cardId);\r\n  };\r\n\r\n  return (\r\n    <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\r\n      <div className=\"board\">\r\n        <div className=\"event-form-section\">\r\n          <EventForm onAddCard={addCard} />\r\n        </div>\r\n        <div className=\"columns\">\r\n          {Object.keys(columns).map((key) => (\r\n            <SortableContext\r\n              key={key}\r\n              items={columns[key].items.map((item) => item.id)}\r\n              strategy={verticalListSortingStrategy}\r\n            >\r\n              <Column column={columns[key]} />\r\n            </SortableContext>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}